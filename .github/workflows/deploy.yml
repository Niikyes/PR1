name: Deploy PR1 to EC2

on:
  push:
    branches:
      - test

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Build and push backend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USER }}/pr1-backend ./backend
          docker push ${{ secrets.DOCKERHUB_USER }}/pr1-backend

      - name: Build and push frontend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USER }}/pr1-frontend ./frontend
          docker push ${{ secrets.DOCKERHUB_USER }}/pr1-frontend

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy PR1 to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "Conectado a EC2. Verificando Docker..."
            if ! command -v docker &> /dev/null
            then
              echo "Instalando Docker..."
              sudo apt update
              sudo apt install -y docker.io docker-compose
              sudo systemctl enable docker
              sudo systemctl start docker
            else
              echo "Docker ya instalado."
            fi

            echo "Pulling nuevas im√°genes..."
            sudo docker pull ${{ secrets.DOCKERHUB_USER }}/pr1-backend
            sudo docker pull ${{ secrets.DOCKERHUB_USER }}/pr1-frontend

            echo "Limpiando contenedores previos..."
            sudo docker stop pr1-backend pr1-frontend || true
            sudo docker rm pr1-backend pr1-frontend || true
            sudo docker image prune -f

            echo "Iniciando contenedores..."
            sudo docker run -d --name pr1-backend -p 8080:8080 ${{ secrets.DOCKERHUB_USER }}/pr1-backend
            sudo docker run -d --name pr1-frontend -p 80:80 ${{ secrets.DOCKERHUB_USER }}/pr1-frontend

